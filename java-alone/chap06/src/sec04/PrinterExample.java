package sec04;

public class PrinterExample {

	public static void main(String[] args) {
		// printer p1 = new printer(); // 객체 생성
		
		Printer.println(10);		//빨간줄이 뜨는 이유는 프린트라는 클래스를 구현하지 않아서.
		Printer.println(true);		// 객체 생성 없이 메소드를 호출한 것.
		Printer.println(5.7);		// 객체를 공유하는 용도. 객체끼리는 분리되지만 분리되지 않고
		Printer.println("홍길동");	// 공유하고 싶을때. 현실로 예를 들면 자식. 자식은 젠더라는
// 클래스를 가짐. 이를 객체화 시켰을 때, 남자a. 젠더는 남자. 자식이라는 클래스에서 여자a라는 객체를 또 생성.
// 이 객체들인 서로 독립적. 부모가 남녀를 낳았을때 독립적인 인격을 지닌 존재들. 객체 역시 동일.
// 그러나 정적 멤버는 번외적으로 공유할 수 있는 물픔에 가까움. 책상등. 남녀 둘다 필요한 것. 이런 메소드를
//공유할 수 있는 것. 객체들이 따로 분리되지 않고 공유가능한 것. 이를 정적 멤버, 메소드로 가능.
//print.println()는 객체가 없어서 언제든지 공유 가능. 단점도 있는데 스태틱이 선언된 곳에서만 사용가능.
//스태틱을 선언을 해야 사용이 가능할 수 있음.
	}

}
